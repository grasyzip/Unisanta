//01)
int valor;
do
{
  Console.WriteLine("Digite um valor positivo: ");
  valor = int.Parse(Console.ReadLine());
  if (valor <= 0)
  {
      Console.WriteLine("Valor inválido. Digite novamente.");
  }
} while (valor <= 0);
  return valor;

//02) rodar em programa separado
using System;
public class LerValores
{
    public static int LerValorPositivo()
    {
        int valor;
        bool valorValido = false;

        do
        {
            Console.Write("Digite um número inteiro positivo: ");
            string entrada = Console.ReadLine();

            if (int.TryParse(entrada, out valor) && valor > 0)
            {
                valorValido = true;
            }
            else
            {
                Console.WriteLine("Entrada inválida. Por favor, digite um número inteiro positivo.");
            }
        } while (!valorValido);

        return valor;
    }

    public static void Main(string[] args)
    {
        int valor1 = LerValorPositivo();
        int valor2;
        bool valor2Valido = false;

        do
        {
            Console.WriteLine("Digite um valor maior que {0}: ", valor1);
            string entrada = Console.ReadLine();

            if (int.TryParse(entrada, out valor2) && valor2 > valor1)
            {
                valor2Valido = true;
            }
            else
            {
                Console.WriteLine("Valor inválido. Digite um valor maior que {0}.", valor1);
            }
        } while (!valor2Valido);

        Console.WriteLine("Valores lidos: {0}, {1}", valor1, valor2);
    }
}

//03)
    char sexo;
    do
    {
        Console.WriteLine("Digite o sexo (F/M): ");
        sexo = char.Parse(Console.ReadLine().ToUpper());
        if (sexo != 'F' && sexo != 'M')
        {
            Console.WriteLine("Sexo inválido. Digite F ou M.");
        }
    } while (sexo != 'F' && sexo != 'M');
    return sexo;

//04)
    Console.WriteLine("Tabuada do 5:");
    for (int contador = 1; contador <= 10; contador++)
    {
        Console.WriteLine("5 x {0} = {1}", contador, 5 * contador);
    }

//05) refeito, rodar em programa separado (feito em outro estilo)
using System;
public class TabuadaPositiva
{
    public static void Main(string[] args)
    {
        int valor = LerValorPositivo();
        ExibirTabuada(valor);
    }

    public static int LerValorPositivo()
    {
        int valor;
        bool valorValido = false;

        do
        {
            Console.Write("Digite um número inteiro positivo: ");
            string entrada = Console.ReadLine();

            if (int.TryParse(entrada, out valor) && valor > 0)
            {
                valorValido = true;
            }
            else
            {
                Console.WriteLine("Entrada inválida. Por favor, digite um número inteiro positivo.");
            }
        } while (!valorValido);

        return valor;
    }

    public static void ExibirTabuada(int valor)
    {
        Console.WriteLine($"\nTabuada do {valor}:");
        for (int contador = 1; contador <= 10; contador++)
        {
            Console.WriteLine($"{valor} x {contador} = {valor * contador}");
        }
    }
}

//06) refeito, rodar em programa separado (feito em outro estilo)
using System;

public class TabuadaDecrescente
{
    public static void Main(string[] args)
    {
        int valor = LerValorPositivo();
        int inicioIntervalo = LerInicioIntervalo();
        int fimIntervalo = LerFimIntervalo(inicioIntervalo);

        ExibirTabuadaDecrescente(valor, inicioIntervalo, fimIntervalo);
    }

    public static int LerValorPositivo()
    {
        int valor;
        bool valorValido = false;

        do
        {
            Console.Write("Digite um número inteiro positivo (X): ");
            string entrada = Console.ReadLine();

            if (int.TryParse(entrada, out valor) && valor > 0)
            {
                valorValido = true;
            }
            else
            {
                Console.WriteLine("Entrada inválida. Por favor, digite um número inteiro positivo.");
            }
        } while (!valorValido);

        return valor;
    }

    public static int LerInicioIntervalo()
    {
        int inicio;
        bool inicioValido = false;

        do
        {
            Console.Write("Digite o início do intervalo (A): ");
            string entrada = Console.ReadLine();

            if (int.TryParse(entrada, out inicio))
            {
                inicioValido = true;
            }
            else
            {
                Console.WriteLine("Entrada inválida. Por favor, digite um número inteiro.");
            }
        } while (!inicioValido);

        return inicio;
    }

    public static int LerFimIntervalo(int inicio)
    {
        int fim;
        bool fimValido = false;

        do
        {
            Console.Write($"Digite o fim do intervalo (B), maior que {inicio}: ");
            string entrada = Console.ReadLine();

            if (int.TryParse(entrada, out fim) && fim > inicio)
            {
                fimValido = true;
            }
            else
            {
                Console.WriteLine($"Entrada inválida. Por favor, digite um número inteiro maior que {inicio}.");
            }
        } while (!fimValido);

        return fim;
    }

    public static void ExibirTabuadaDecrescente(int valor, int inicio, int fim)
    {
        Console.WriteLine($"\nTabuada do {valor} (de {fim} a {inicio}):");
        for (int i = fim; i >= inicio; i--)
        {
            Console.WriteLine($"{valor} x {i} = {valor * i}");
        }
    }
}

//08)

    int soma = 0;
    for (int contador = 1; contador <= 100; contador++)
    {
        soma += contador;
    }
    Console.WriteLine("A soma de 1 a 100 é: {0}", soma);

//09)
Console.WriteLine("Primeiro valor");
int valor1 = int.Parse(Console.ReadLine());
int maior = valor1;
int menor = valor1;
int contador5 = 2;
while (contador5 <= 10)
{
  Console.WriteLine("{0} valor:", contador5);
  valor1 = int.Parse(Console.ReadLine());
  if (valor1 > maior) maior = valor1;
  if (valor1 < menor) menor = valor1;
  contador5++;
}
Console.WriteLine("Maior: {0}", maior);
Console.WriteLine("Maior: {0}", menor);

//10)
int a = 1;
int b = 1;
int contador6 = 1;
Console.WriteLine("30 primeiros numeros da serie de Fibonacci");
while (contador6 <= 30)
{
  Console.WriteLine(a);
  int proximo = a + b;
  a = b;
  b = proximo;
  contador6++;
}

//-------------

//11)
    int n;
    do
    {
        Console.Write("Digite um valor N (1 a 49): ");
        n = int.Parse(Console.ReadLine());
        if (n <= 0 || n >= 50)
        {
            Console.WriteLine("Valor inválido. Digite novamente.");
        }
    } while (n <= 0 || n >= 50);

    float soma = 0f;
    for (int i = 1; i <= n; i++)
    {
        soma += (float)i / (i + 1);
    }
    Console.WriteLine("A soma dos {0} primeiros termos é: {1}",n , soma);

//12) outra forma de resolver a 9 usando MinValue e MaxValue
      int[] valores = new int[10];
      int maior = int.MinValue;
      int menor = int.MaxValue;

      for (int i = 0; i < 10; i++)
      {
          Console.Write($"Digite o {i + 1}º valor: ");
          valores[i] = int.Parse(Console.ReadLine());

          if (valores[i] > maior)
          {
              maior = valores[i];
          }

          if (valores[i] < menor)
          {
              menor = valores[i];
          }
      }

      Console.WriteLine($"Maior valor: {maior}");
      Console.WriteLine($"Menor valor: {menor}");

//13)
    int a, b;

    do
    {
        Console.Write("Digite o valor de A: ");
        a = int.Parse(Console.ReadLine());
        Console.Write("Digite o valor de B: ");
        b = int.Parse(Console.ReadLine());

        if (a <= b)
        {
            Console.WriteLine("A deve ser maior que B. Digite novamente.");
        }
    } while (a <= b);

    int resto = a;
    while (resto >= b)
    {
        resto -= b;
    }
    Console.WriteLine($"O resto da divisão de {a} por {b} é: {resto}");

//14)
    float somaPesoHomens = 0;
    int quantidadeHomens = 0;
    float somaPesoMulheres = 0;
    int quantidadeMulheres = 0;

    for (int i = 0; i < 100; i++)
    {
        Console.Write($"Digite o sexo da {i + 1}ª pessoa (F/M): ");
        char sexo = char.Parse(Console.ReadLine().ToUpper());

        Console.Write($"Digite o peso da {i + 1}ª pessoa: ");
        float peso = float.Parse(Console.ReadLine());

        if (sexo == 'M')
        {
            somaPesoHomens += peso;
            quantidadeHomens++;
        }
        else if (sexo == 'F')
        {
            somaPesoMulheres += peso;
            quantidadeMulheres++;
        }
        else
        {
            Console.WriteLine("Sexo inválido. Ignorando pessoa.");
            i--; // Repete a iteração para a mesma pessoa
        }
    }

    if (quantidadeHomens > 0)
    {
        Console.WriteLine("Média de peso dos homens: {somaPesoHomens / quantidadeHomens}");
    }
    else
    {
        Console.WriteLine("Nenhum homem informado.");
    }

    if (quantidadeMulheres > 0)
    {
        Console.WriteLine("Média de peso das mulheres: {somaPesoMulheres / quantidadeMulheres}");
    }
    else
    {
        Console.WriteLine("Nenhuma mulher informada.");
    }

//15)
    int n;
    do
    {
        Console.Write("Digite a quantidade de valores (1 a 19): ");
        n = int.Parse(Console.ReadLine());
        if (n < 1 || n > 19)
        {
            Console.WriteLine("Quantidade inválida. Digite novamente.");
        }
    } while (n < 1 || n > 19);

    float[] valores = new float[n];
    float maior = float.MinValue;
    float menor = float.MaxValue;
    float soma = 0;
    int quantidadePositivos = 0;
    int quantidadeNegativos = 0;

    for (int i = 0; i < n; i++)
    {
        Console.Write($"Digite o {0}º valor: ", i + 1);
        valores[i] = float.Parse(Console.ReadLine());

        if (valores[i] > maior)
        {
            maior = valores[i];
        }

        if (valores[i] < menor)
        {
            menor = valores[i];
        }

        soma += valores[i];

        if (valores[i] > 0)
        {
            quantidadePositivos++;
        }
        else if (valores[i] < 0)
        {
            quantidadeNegativos++;
        }
    }

    Console.WriteLine("Maior valor: {0}", maior);
    Console.WriteLine("Menor valor: {0}", menor);
    Console.WriteLine("Soma dos valores: {0}", soma);
    Console.WriteLine("Média dos valores: {0}", soma / n);
    Console.WriteLine("Porcentagem de valores positivos: {0}%", (float)quantidadePositivos / n * 100);
    Console.WriteLine("Porcentagem de valores negativos: {0}%", (float)quantidadeNegativos / n * 100);

